title: Post Event
new-page: true
on-arrival: {!
// make sure no stat is below 0.
for (var c of Q.classes) {
    for (var party of Q.parties) {
        if (Q[c+'_'+party] < 0) {
            Q[c+'_'+party] = 0;
        }
    }
}

Q.pro_republic = Math.round(Q.pro_republic);
Q.nationalism = Math.round(Q.nationalism);
Q.socialism = Math.round(Q.socialism);

if (Q.pro_republic < 0) {
    Q.pro_republic = 0;
}
if (Q.pro_republic >= 100) {
    Q.pro_republic = 99;
}
// re-calculate party support
// calculate normalized class voting for the achievements
for (var c of Q.classes) {
    var class_votes = 0;
    for (var party of Q.parties) {
        if (Q[c+'_'+party] < 0) {
            Q[c+'_'+party] = 0;
        }
        class_votes += Q[c+'_'+party];
    }
    for (var party of Q.parties) {
        Q[c + '_' + party + '_normalized'] = Math.round(100*Q[c+'_'+party]/class_votes);
    }
}
// calculate support for each of the parties
var total_support = 0; 
for (var party of Q.parties) {
    var party_support = 0;
    for (var c of Q.classes) {
        if (Q.old_demographics) { 
            party_support += Q[c]*Q[c+'_'+party];
        } else  { 
            party_support += Q[c]*Q[c+'_'+party+'_normalized'];
        } 
    }
    Q[party + '_support'] = party_support;
    total_support += party_support; 
}
// 2. normalize support (fraction)
for (var party of Q.parties) {
    Q[party+'_normalized'] = Q[party + '_support']/total_support;
    Q[party+'_votes'] = Math.round(Q[party+'_normalized']*100);
}


// set faction strength/dissent to 0
for (var c of Q.factions) {
    if (Q[c+'_dissent'] < 0) {
        Q[c+'_dissent'] = 0;
    } else if (Q[c+'_dissent'] >= 100) {
        Q[c+'_dissent'] = 99;
    }
    if (Q[c+'_strength'] < 0) {
        Q[c+'_strength'] = 0;
    }
}

if (Q.unemployed <= 1) {
    Q.unemployed = 1;
}

// re-calculate dissent.
var total_strength = Q.left_strength + Q.center_strength + Q.labor_strength + Q.reformist_strength + Q.neorevisionist_strength;
var total_dissent = Q.left_strength*Q.left_dissent + Q.center_strength*Q.center_dissent + Q.labor_strength*Q.labor_dissent + Q.reformist_strength*Q.reformist_dissent + Q.neorevisionist_strength*Q.neorevisionist_dissent;

Q.dissent = 0.01*total_dissent/total_strength;
Q.dissent_percent = Q.dissent*100;
console.log('new dissent: ' + Q.dissent);

if (Q.dissent < 0) {
    Q.dissent = 0;
} else if (Q.dissent > 0.95) {
    Q.dissent = 0.95;
}

// 1. update dates
if (Q.month_actions >= 1) {
    Q.time += 1;
    Q.month_actions = 0;
    Q.month += 1;
    if (Q.month >= 13) {
        Q.month = 1;
        Q.year += 1;
    }
    // decrement timers
    for (timer of Q.timers) {
        if (Q[timer+'_timer'] && Q[timer+'_timer'] > 0) {
            Q[timer+'_timer'] -= 1;
        }
    }
    // change economic stats...
    // we're basically implicity drawing a Philips curve
    // budget deficits lead to some inflation
    if (Q.budget <= 0 && Q.budget > -2 && Q.inflation < 2.5) {
        Q.inflation += 0.1;
    }
    if (Q.budget <= -2 && Q.budget > -5 && Q.inflation < 5) {
        Q.inflation += 0.2;
        if (Q.unemployed >= 12) {
            Q.inflation -= 0.1;
        }
    }
    if (Q.budget <= -5 && Q.inflation < 10) {
        Q.inflation += 0.3;
        if (Q.unemployed >= 15) {
            Q.inflation -= 0.1;
        }
    }
    // deflation is bad
    if (Q.inflation < -0.5 && Q.inflation > -5 && Q.unemployed < 15) {
        Q.unemployed += 0.2;
    }
    if (Q.inflation <= -5 && Q.unemployed < 20) {
        Q.unemployed += 0.3;
    }
}
Q.has_event = 0;
// check if there are any cards in #event, and then go to main if not.
var scene = this.game.scenes['post_event.events_choice'];
var choices = this._compileChoices(scene);
if (choices && choices[0].title != "Continue...") {
    Q.has_event = 1;
} else {
    has_event = 0;
}

if (typeof window !== "undefined" && window.generateBar) {
}
!}
go-to: events_choice if has_event = 1; main if has_event = 0 and difficulty >= 0; main.main_easy if has_event = 0 and difficulty < 0

= [+ month : month +] [+ year +]

@events_choice

- #event

# This scene is solely for updating numbers after events, and routing to special events.
